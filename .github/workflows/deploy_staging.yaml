name: ðŸš€ Deploy to Staging

on:
  push:
    branches:
      - staging-*

jobs:
  build_and_deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Overwrite .env file
        run: |
          echo "NEXT_PUBLIC_BASE_URL=${{ secrets.NEXT_PUBLIC_BASE_URL }}" >> .env
          echo "NEXT_PUBLIC_STRIPE_PUBLIC_KEY=${{ secrets.NEXT_PUBLIC_STRIPE_PUBLIC_KEY }}" >> .env
          echo "NEXT_PUBLIC_CHECK_PHONE_API_KEY=${{ secrets.NEXT_PUBLIC_CHECK_PHONE_API_KEY }}" >> .env
          echo "ZOOM_SDK_KEY=${{ secrets.ZOOM_SDK_KEY }}" >> .env
          echo "ZOOM_SDK_SECRET=${{ secrets.ZOOM_SDK_SECRET }}" >> .env
      - name: Extract version from package.json
        id: extract_version
        run: echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_ENV

      - name: Build Docker image
        run: docker build --build-arg APP_PORT=${{ secrets.STAGING_PORT }} -t mazinmtn/therapygym_frontend_staging:${{ env.VERSION }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PWD }}

      - name: Push Docker image to Docker Hub
        run: docker push mazinmtn/therapygym_frontend_staging:${{ env.VERSION }}

      - name: Deploy to Staging
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          VM_USER: ${{ secrets.VM_USER }}
          VM_IP: ${{ secrets.VM_IP }}
          PORT: ${{ secrets.STAGING_PORT }}
          NEXT_PUBLIC_BASE_URL: ${{ secrets.NEXT_PUBLIC_BASE_URL }}
          NEXT_PUBLIC_STRIPE_PUBLIC_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLIC_KEY }}
          NEXT_PUBLIC_CHECK_PHONE_API_KEY: ${{ secrets.NEXT_PUBLIC_CHECK_PHONE_API_KEY }}
          ZOOM_SDK_KEY: ${{ secrets.ZOOM_SDK_KEY }}
          ZOOM_SDK_SECRET: ${{ secrets.ZOOM_SDK_SECRET }}
          VERSION: ${{ env.VERSION }}
        run: |
          # Store private key securely
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/private_key
          chmod 600 ~/.ssh/private_key
          # Disable strict host checking (Optional but useful in CI/CD)
          echo -e "Host *\n\tStrictHostKeyChecking no\n\n" >> ~/.ssh/config
          # Ensure known_hosts is configured (You can skip this if not needed)
          ssh-keyscan -H $VM_IP >> ~/.ssh/known_hosts
          # SSH into the server and deploy the Docker container
          ssh -i ~/.ssh/private_key $VM_USER@$VM_IP << EOF
            echo "${{ secrets.DOCKER_PWD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            
            docker pull mazinmtn/therapygym_frontend_staging:${VERSION}
            
            if [ "\$(docker ps -q -f name=therapygym_frontend_staging)" ]; then
              docker stop therapygym_frontend_staging
            fi

            if [ "\$(docker ps -aq -f status=exited -f name=therapygym_frontend_staging)" ]; then
              docker rm therapygym_frontend_staging
            fi

            docker run -d --restart unless-stopped -p "$PORT:$PORT" --name therapygym_frontend_staging \
              -e PORT="$PORT" \
              -e NEXT_PUBLIC_BASE_URL="$NEXT_PUBLIC_BASE_URL" \
              -e NEXT_PUBLIC_STRIPE_PUBLIC_KEY="$NEXT_PUBLIC_STRIPE_PUBLIC_KEY" \
              -e NEXT_PUBLIC_CHECK_PHONE_API_KEY="$NEXT_PUBLIC_CHECK_PHONE_API_KEY" \
              -e ZOOM_SDK_KEY="$ZOOM_SDK_KEY" \
              -e ZOOM_SDK_SECRET="$ZOOM_SDK_SECRET" \
              mazinmtn/therapygym_frontend_staging:${VERSION}

            docker image prune -f
          EOF

          # Clean up the private key
          rm -f ~/.ssh/private_key
